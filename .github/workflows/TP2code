# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
import math

def PointFixe( g,x0,epsilon,Nitermax ):
    xold=x0
    xnew=g(xold)
    n=1
    while abs(xnew-xold)>epsilon and n<Nitermax :
        xold=xnew
        xnew=g(xold)
        n+=1
    return xnew,n
import math

def PointFixe( g,x0,epsilon,Nitermax ):
    xold=x0
    xnew=g(xold)
    n=1
    while abs(xnew-xold)>epsilon and n<Nitermax :
        xold=xnew
        xnew=g(xold)
        n+=1
    return xnew,n

def g0(x):
    return(1+math.sin(x))/2
print(PointFixe(g0,0,1e-6, 5e4))

def g1(x):
    return (9-3*x)**(1/4)
def g1_1(x):
    return (9-x**4)/3
def g1_2(x):
    return 9/(x**3+3)
def g1_3(x):
    return ((9/x)-3)**(1/3)
def g1_4(x):
    return -(9-3*x)**(1/4)
print("fonction 1:",PointFixe(g1,1.3,1e-10, 5e4))
print("fonction 1:",PointFixe(g1_4,-2,1e-10, 5e4))
#print(PointFixe(g1_1,-2,1e-10, 5e4))
#print("fonction 1:",PointFixe(g1_2,-2,1e-10, 5e4))
#print("fonction 1:",PointFixe(g1_3,-3,1e-10, 5e4))
def g2(x):
    return math.acos((x+2)/3)
def g2_2(x):
    return 3*math.cos(x)-2
def g2_3(x):
    return -math.acos((x+2)/3)
print("fonction2:",PointFixe(g2,0,1e-10, 5e4))
print("fonction2:",PointFixe(g2_3,-1,1e-10, 5e4))
#print("fonction2:",PointFixe(g2_2,-5,1e-10, 5e4))
#print("fonction2:",PointFixe(g2_2,-1.5,1e-10, 5e4))

def g3(x):
    return 7/math.exp(x)
def g3_1(x) :
    return math.log(7/x)
#print("fonction3:",PointFixe(g3,1.5,1e-10, 5e4))
print("fonction3:",PointFixe(g3_1,1.5,1e-10, 5e4))

def g_4 (x):
    return math.exp(x)-10
def g4_1 (x):
    return math.log(10+x)
print("fonction 4:",PointFixe(g_4, -10, 1e-10, 5e4))
print("fonction 4:",PointFixe(g4_1, 2.5, 1e-10, 5e4))

def g5(x):
    return 2*math.tan(x)-5
def g5_1(x):
    return math.atan((x+5)/2)
#print("fonction 5:",PointFixe(g5,0,1e-10, 5e4))
print("fonction 5:",PointFixe(g5_1,0,1e-10, 5e4))

def g6(x):
    return math.log(x**2+3)
def g6_1(x):
    a=math.e**x-3
    return a**(1/2)
print("fonction 6:",PointFixe(g6,0,1e-10, 5e4))
#print(PointFixe(g6_1,0,1e-10, 5e4))

def g7(x):
    return (7-4*math.log(x))/3
def g7_1(x):
    return math.exp((7-3*x)/4)
print("fonction 7:",PointFixe(g7,1,1e-10, 5e4))
#print(PointFixe(g7_1,0,1e-10, 5e4))

def g8(x):
    return 17/(x**3-2*x+14)
def g8_1(x):
    return (17+2*x**2-4*x)**(1/4)
def g8_2(x):
    return -(17+2*x**2-4*x)**(1/4)
#print("fonction 8:",PointFixe(g8,0,1e-10, 5e4))
print("fonction 8:",PointFixe(g8_1,2,1e-10, 5e4))
print("fonction 8:",PointFixe(g8_2,-3,1e-10, 5e4))

def g9(x):
    return math.log(7+2*math.sin(x))
def g9_1(x):
    return math.asin((-7+math.exp(x))/2)
print("fonction 9:",PointFixe(g9,0,1e-10, 5e4))
#print(PointFixe(g9_1,0,1e-10, 5e4))

def g10(x):
    return math.log(10/math.log(x**2+4))
def g10_1(x):
    return (math.exp(10/math.exp(x))-4)**(1/2)
print("fonction 10:",PointFixe(g10,1,1e-10, 5e4))
#print(PointFixe(g10_1,0,1e-10, 5e4))
